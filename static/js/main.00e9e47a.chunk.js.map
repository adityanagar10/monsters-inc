{"version":3,"sources":["components/card-files/card.component.js","components/card-files/card-body.js","components/search-files/searchbox.js","App.js","reportWebVitals.js","index.js"],"names":["cardcomponent","props","className","alt","src","monster","id","name","email","monsters","map","searchbox","placeholder","handleChange","type","onChange","App","state","searchField","fetch","then","response","json","users","setState","this","filteredMonsters","filter","toLowerCase","includes","a","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6UAYeA,MATf,SAAuBC,GACnB,OACI,sBAAKC,UAAU,iBAAf,UACA,qBAAKC,IAAI,gBAAgBC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BAC5B,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,YCLX,WAACP,GACZ,OAAO,qBAAKC,UAAU,YAAf,SACND,EAAMQ,SAASC,KAAI,SAAAL,GAAY,OAC5B,cAAC,EAAD,CAAgCA,QAASA,GAArBA,EAAQC,U,MCMrBK,MATf,YAAkD,IAA9BC,EAA6B,EAA7BA,YAAcC,EAAe,EAAfA,aAC9B,OAAO,8BACP,uBAAOX,UAAU,SAASY,KAAK,SAASF,YAAaA,EAAaG,SAAUF,OCgCjEG,E,kDA/Bb,aAAc,IAAD,8BAGX,gBACKC,MAAQ,CACXZ,QAAS,GACTa,YAAa,IANJ,E,qDAWb,WAAoB,IAAD,OACjBC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKC,SAAS,CAACnB,QAASkB,S,oBAIzC,WAAS,IAAD,SACyBE,KAAKR,MAA7BZ,EADD,EACCA,QAASa,EADV,EACUA,YACZQ,EAAmBrB,EAAQsB,QAAO,SAAAtB,GAAO,OAAIA,EAAQE,KAAKqB,cAAcC,SAASX,EAAYU,kBACjG,OACA,sBAAK1B,UAAU,MAAf,UACA,gDACA,cAAC,EAAD,CAAQU,YAAY,kBAAkBC,aAAc,SAAAiB,GAAC,OAAI,EAAKN,SAAS,CAACN,YAAaY,EAAEC,OAAOC,WAC9F,cAAC,EAAD,CAAMvB,SAAUiB,W,GA3BFO,aCQHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.00e9e47a.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.container.styles.css'\r\n\r\nfunction cardcomponent(props){\r\n    return(\r\n        <div className=\"card-container\"> \r\n        <img alt=\"Monster Image\" src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}/>\r\n        <h2>{props.monster.name}</h2>\r\n        <p>{props.monster.email}</p>\r\n        </div>)\r\n}\r\n\r\nexport default cardcomponent;","import React from 'react';\r\nimport './card.styles.css'\r\nimport CardComponent from './card.component';\r\nexport default (props)=>{  \r\n    return(<div className='card-body'>\r\n    {props.monsters.map(monster => {return(\r\n        <CardComponent key={monster.id} monster={monster} /> \r\n        )})} \r\n    </div>)};","import React from 'react';\r\nimport \"./search.box.style.css\"\r\n\r\nfunction searchbox({placeholder , handleChange }){\r\n    return(<div>\r\n    <input className=\"search\" type='search' placeholder={placeholder} onChange={handleChange}\r\n        \r\n    />\r\n    \r\n    </div>)\r\n}\r\n\r\nexport default searchbox;","import React, {Component} from 'react'\nimport './App.css';\nimport Card from './components/card-files/card-body' \nimport Search from \"./components/search-files/searchbox\"\nclass App extends Component{\n\n  constructor(){\n    \n    //call constructor on the component class\n    super();\n    this.state = { \n      monster: [],\n      searchField: \"\"\n    }\n\n  }\n\n  componentDidMount(){\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n    .then(response => response.json())\n    .then(users => this.setState({monster: users}));\n  }\n\n\n  render(){\n    const {monster, searchField} = this.state;\n    var filteredMonsters = monster.filter(monster => monster.name.toLowerCase().includes(searchField.toLowerCase()))\n    return (  \n    <div className=\"App\">\n    <h1> Monsters Inc.</h1>\n    <Search placeholder=\"Search Monsters\" handleChange={a => this.setState({searchField: a.target.value})}/>\n    <Card monsters={filteredMonsters}>\n    </Card>\n    </div>\n    );}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}